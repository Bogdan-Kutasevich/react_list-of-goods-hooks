{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReverse","setIsReverse","changeSortBy","currentType","isResetVisible","visibleGoods","goods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","cn","onClick","currentStateReverse","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAsCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KAEMC,EAAe,SAACC,GACpBJ,EAAYI,IAYRC,EAAiBN,IAAaL,EAASI,MAAQG,EAC/CK,EA7CR,SACEC,EADF,GAGG,IADCR,EACF,EADEA,SAAUE,EACZ,EADYA,UAENK,EAAY,YAAOC,GAoBzB,OAlBAD,EAAaE,MAAK,SAACC,EAAIC,GACrB,OAAQX,GACN,KAAKL,EAASiB,SACZ,OAAOF,EAAGG,cAAcF,GAE1B,KAAKhB,EAASmB,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OAExB,KAAKpB,EAASI,KACd,QACE,OAAO,MAITG,GACFK,EAAaS,UAGRT,EAqBcU,CACnBrB,EACA,CAAEI,WAAUE,cAGd,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYpB,IAAaL,EAASiB,WAEtCS,QAAS,kBAAMjB,EAAaT,EAASiB,WANvC,iCAWA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYpB,IAAaL,EAASmB,SAEtCO,QAAS,kBAAMjB,EAAaT,EAASmB,SANvC,4BAWA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAalB,IAEjBmB,QAzCQ,WACdlB,GAAa,SAACmB,GAAD,OAA0BA,MAkCnC,qBAWChB,GAEG,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAxDE,WACZpB,EAAYN,EAASI,MACrBI,GAAa,IAmDL,sBAUN,6BACE,6BACGI,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cC/HpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4af65d40.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReverse: boolean,\n};\n\nfunction getReorderedGoods(\n  goods: string[],\n  { sortType, isReverse }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      case SortType.NONE:\n      default:\n        return 0;\n    }\n  });\n\n  if (isReverse) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReverse, setIsReverse] = useState(false);\n\n  const changeSortBy = (currentType: SortType) => {\n    setSortType(currentType);\n  };\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setIsReverse(false);\n  };\n\n  const reverse = () => {\n    setIsReverse((currentStateReverse) => !currentStateReverse);\n  };\n\n  const isResetVisible = sortType !== SortType.NONE || isReverse;\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReverse },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={() => changeSortBy(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => changeSortBy(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-warning',\n            { 'is-light': !isReverse },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {isResetVisible\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}